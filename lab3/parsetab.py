
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=ADDITION_ASSIGNSUBTRACTION_ASSIGNMULTIPLICATION_ASSIGNDIVISION_ASSIGNnonassocNOT_EQUALEQUALnonassocLESS_OR_EQUALGREATER_OR_EQUAL><left+-PLUS_MATRIXMINUS_MATRIXleft*/MULTIPLY_MATRIXDIVIDE_MATRIXnonassocIFXnonassocELSErightUMINUSADDITION_ASSIGN BREAK CONTINUE DIVIDE_MATRIX DIVISION_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER_OR_EQUAL ID IF INT LESS_OR_EQUAL MINUS_MATRIX MULTIPLICATION_ASSIGN MULTIPLY_MATRIX NOT_EQUAL ONES PLUS_MATRIX PRINT RETURN STRING SUBTRACTION_ASSIGN WHILE ZEROSprogram : instructionsinstructions : instructions instruction\n                    | instruction : assignment \';\'\n                           | instruction_if\n                           | instruction_loop\n                           | instruction_print \';\'\n                           | instruction_return \';\'\n                           | BREAK \';\'\n                           | CONTINUE \';\'\n                           | \'{\' instructions \'}\' assignment : identifier \'=\' operations\n                    | identifier ADDITION_ASSIGN operations\n                    | identifier MULTIPLICATION_ASSIGN operations\n                    | identifier SUBTRACTION_ASSIGN operations\n                    | identifier DIVISION_ASSIGN operationsinstruction_if : IF \'(\' condition \')\' instruction %prec IFX\n                      | IF \'(\' condition \')\' instruction ELSE instruction instruction_loop : FOR ID \'=\' operations \':\' operations instruction\n                        | WHILE \'(\' condition \')\' instruction instruction_print : PRINT operations_list instruction_return : RETURN operations\n                            | RETURN condition : operationsoperations : operations \'+\' operations\n                      | operations \'-\' operations\n                      | operations \'*\' operations\n                      | operations \'/\' operations\n                      | operations \'>\' operations\n                      | operations \'<\' operations\n                      | operations GREATER_OR_EQUAL operations\n                      | operations LESS_OR_EQUAL operations\n                      | operations NOT_EQUAL operations\n                      | operations EQUAL operations\n                      | operations PLUS_MATRIX operations\n                      | operations MINUS_MATRIX operations\n                      | operations MULTIPLY_MATRIX operations\n                      | operations DIVIDE_MATRIX operations\n                      | \'(\' operations \')\'\n                      | \'(\' operations \')\' "\'"\n                      | array\n                      | valueoperations : \'-\' operations %prec UMINUSvalue : identifier\n             | FLOAT\n             | INT\n             | STRING\n             | ZEROS \'(\' INT \')\'\n             | ONES \'(\' INT \')\'\n             | EYE \'(\' INT \')\' identifier : ID\n                | identifier array\n                | identifier "\'" array : \'[\' array_list \']\'\n            | \'[\' operations_list \']\' array_list : array_list \',\' array\n                    | array operations_list : operations_list \',\' operations\n                        | operations'
    
_lr_action_items = {'BREAK':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,9,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,9,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,9,9,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,9,9,-18,-19,]),'CONTINUE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,10,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,10,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,10,10,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,10,10,-18,-19,]),'{':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,11,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,11,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,11,11,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,11,11,-18,-19,]),'IF':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,13,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,13,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,13,13,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,13,13,-18,-19,]),'FOR':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,14,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,14,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,14,14,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,14,14,-18,-19,]),'WHILE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,16,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,16,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,16,16,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,16,16,-18,-19,]),'PRINT':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,17,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,17,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,17,17,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,17,17,-18,-19,]),'RETURN':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,111,112,113,114,115,116,117,118,119,],[-3,18,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,18,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,-55,18,18,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,18,18,-18,-19,]),'ID':([0,2,3,5,6,11,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,38,39,40,41,42,43,44,45,50,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,112,113,114,115,116,117,118,119,],[-3,15,-2,-5,-6,-3,34,-51,15,15,-4,-7,-8,-9,-10,15,15,15,15,15,15,-52,-53,15,15,15,15,15,-41,-42,-44,-45,-46,-47,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-43,-54,-55,15,15,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,15,-20,-40,-48,-49,-50,15,15,-18,-19,]),'$end':([0,1,2,3,5,6,19,20,21,22,23,50,109,111,118,119,],[-3,0,-1,-2,-5,-6,-4,-7,-8,-9,-10,-11,-17,-20,-18,-19,]),'}':([3,5,6,11,19,20,21,22,23,24,50,109,111,118,119,],[-2,-5,-6,-3,-4,-7,-8,-9,-10,50,-11,-17,-20,-18,-19,]),';':([4,7,8,9,10,15,18,30,31,36,37,40,41,42,43,44,45,49,51,52,53,54,55,78,83,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,],[19,20,21,22,23,-51,-23,-52,-53,-21,-59,-41,-42,-44,-45,-46,-47,-22,-12,-13,-14,-15,-16,-43,-54,-55,-58,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-50,]),'ELSE':([5,6,19,20,21,22,23,50,109,111,118,119,],[-5,-6,-4,-7,-8,-9,-10,-11,116,-20,-18,-19,]),'=':([12,15,30,31,34,83,85,],[25,-51,-52,-53,61,-54,-55,]),'ADDITION_ASSIGN':([12,15,30,31,83,85,],[26,-51,-52,-53,-54,-55,]),'MULTIPLICATION_ASSIGN':([12,15,30,31,83,85,],[27,-51,-52,-53,-54,-55,]),'SUBTRACTION_ASSIGN':([12,15,30,31,83,85,],[28,-51,-52,-53,-54,-55,]),'DIVISION_ASSIGN':([12,15,30,31,83,85,],[29,-51,-52,-53,-54,-55,]),"'":([12,15,30,31,42,83,85,104,],[31,-51,-52,-53,31,-54,-55,112,]),'[':([12,15,17,18,25,26,27,28,29,30,31,32,33,35,38,39,42,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,84,85,110,],[32,-51,32,32,32,32,32,32,32,-52,-53,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-54,32,-55,32,]),'(':([13,16,17,18,25,26,27,28,29,32,33,35,38,39,46,47,48,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[33,35,39,39,39,39,39,39,39,39,39,39,39,39,80,81,82,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'+':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,64,-41,-42,-44,-45,-46,-47,64,64,64,64,64,64,-41,64,-43,64,-54,-55,64,64,-25,-26,-27,-28,64,64,64,64,64,64,-35,-36,-37,-38,-39,-40,-48,-49,-50,64,]),'-':([15,17,18,25,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,49,51,52,53,54,55,58,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,112,113,114,115,117,],[-51,38,38,38,38,38,38,38,-52,-53,38,38,38,65,38,38,-41,-42,-44,-45,-46,-47,65,65,65,65,65,65,-41,65,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-43,65,-54,-55,65,65,-25,-26,-27,-28,65,65,65,65,65,65,-35,-36,-37,-38,-39,38,-40,-48,-49,-50,65,]),'*':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,66,-41,-42,-44,-45,-46,-47,66,66,66,66,66,66,-41,66,-43,66,-54,-55,66,66,66,66,-27,-28,66,66,66,66,66,66,66,66,-37,-38,-39,-40,-48,-49,-50,66,]),'/':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,67,-41,-42,-44,-45,-46,-47,67,67,67,67,67,67,-41,67,-43,67,-54,-55,67,67,67,67,-27,-28,67,67,67,67,67,67,67,67,-37,-38,-39,-40,-48,-49,-50,67,]),'>':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,68,-41,-42,-44,-45,-46,-47,68,68,68,68,68,68,-41,68,-43,68,-54,-55,68,68,-25,-26,-27,-28,None,None,None,None,68,68,-35,-36,-37,-38,-39,-40,-48,-49,-50,68,]),'<':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,69,-41,-42,-44,-45,-46,-47,69,69,69,69,69,69,-41,69,-43,69,-54,-55,69,69,-25,-26,-27,-28,None,None,None,None,69,69,-35,-36,-37,-38,-39,-40,-48,-49,-50,69,]),'GREATER_OR_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,70,-41,-42,-44,-45,-46,-47,70,70,70,70,70,70,-41,70,-43,70,-54,-55,70,70,-25,-26,-27,-28,None,None,None,None,70,70,-35,-36,-37,-38,-39,-40,-48,-49,-50,70,]),'LESS_OR_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,71,-41,-42,-44,-45,-46,-47,71,71,71,71,71,71,-41,71,-43,71,-54,-55,71,71,-25,-26,-27,-28,None,None,None,None,71,71,-35,-36,-37,-38,-39,-40,-48,-49,-50,71,]),'NOT_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,72,-41,-42,-44,-45,-46,-47,72,72,72,72,72,72,-41,72,-43,72,-54,-55,72,72,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-40,-48,-49,-50,72,]),'EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,73,-41,-42,-44,-45,-46,-47,73,73,73,73,73,73,-41,73,-43,73,-54,-55,73,73,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-40,-48,-49,-50,73,]),'PLUS_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,74,-41,-42,-44,-45,-46,-47,74,74,74,74,74,74,-41,74,-43,74,-54,-55,74,74,-25,-26,-27,-28,74,74,74,74,74,74,-35,-36,-37,-38,-39,-40,-48,-49,-50,74,]),'MINUS_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,75,-41,-42,-44,-45,-46,-47,75,75,75,75,75,75,-41,75,-43,75,-54,-55,75,75,-25,-26,-27,-28,75,75,75,75,75,75,-35,-36,-37,-38,-39,-40,-48,-49,-50,75,]),'MULTIPLY_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,76,-41,-42,-44,-45,-46,-47,76,76,76,76,76,76,-41,76,-43,76,-54,-55,76,76,76,76,-27,-28,76,76,76,76,76,76,76,76,-37,-38,-39,-40,-48,-49,-50,76,]),'DIVIDE_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,60,78,79,83,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,],[-51,-52,-53,77,-41,-42,-44,-45,-46,-47,77,77,77,77,77,77,-41,77,-43,77,-54,-55,77,77,77,77,-27,-28,77,77,77,77,77,77,77,77,-37,-38,-39,-40,-48,-49,-50,77,]),',':([15,30,31,36,37,40,41,42,43,44,45,56,57,58,78,83,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,112,113,114,115,],[-51,-52,-53,63,-59,-41,-42,-44,-45,-46,-47,84,63,-41,-43,-54,-55,-58,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-56,-40,-48,-49,-50,]),']':([15,30,31,37,40,41,42,43,44,45,56,57,58,78,83,85,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,112,113,114,115,],[-51,-52,-53,-59,-41,-42,-44,-45,-46,-47,83,85,-41,-43,-54,-55,-58,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-56,-40,-48,-49,-50,]),')':([15,30,31,40,41,42,43,44,45,59,60,62,78,79,83,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,113,114,115,],[-51,-52,-53,-41,-42,-44,-45,-46,-47,86,-24,88,-43,104,-54,-55,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,113,114,115,-40,-48,-49,-50,]),':':([15,30,31,40,41,42,43,44,45,78,83,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,],[-51,-52,-53,-41,-42,-44,-45,-46,-47,-43,-54,-55,110,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-50,]),'FLOAT':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INT':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,110,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,105,106,107,44,]),'STRING':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ZEROS':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ONES':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'EYE':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,11,],[2,24,]),'instruction':([2,24,86,88,116,117,],[3,3,109,111,118,119,]),'assignment':([2,24,86,88,116,117,],[4,4,4,4,4,4,]),'instruction_if':([2,24,86,88,116,117,],[5,5,5,5,5,5,]),'instruction_loop':([2,24,86,88,116,117,],[6,6,6,6,6,6,]),'instruction_print':([2,24,86,88,116,117,],[7,7,7,7,7,7,]),'instruction_return':([2,24,86,88,116,117,],[8,8,8,8,8,8,]),'identifier':([2,17,18,24,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,86,88,110,116,117,],[12,42,42,12,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,12,12,42,12,12,]),'array':([12,17,18,25,26,27,28,29,32,33,35,38,39,42,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,110,],[30,40,40,40,40,40,40,40,58,40,40,40,40,30,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,108,40,]),'operations_list':([17,32,],[36,57,]),'operations':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[37,49,51,52,53,54,55,37,60,60,78,79,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,117,]),'value':([17,18,25,26,27,28,29,32,33,35,38,39,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,110,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'array_list':([32,],[56,]),'condition':([33,35,],[59,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',33),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',41),
  ('instructions -> <empty>','instructions',0,'p_instructions','Mparser.py',42),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',53),
  ('instruction -> instruction_if','instruction',1,'p_instruction','Mparser.py',54),
  ('instruction -> instruction_loop','instruction',1,'p_instruction','Mparser.py',55),
  ('instruction -> instruction_print ;','instruction',2,'p_instruction','Mparser.py',56),
  ('instruction -> instruction_return ;','instruction',2,'p_instruction','Mparser.py',57),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',58),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',60),
  ('assignment -> identifier = operations','assignment',3,'p_assignments','Mparser.py',75),
  ('assignment -> identifier ADDITION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',76),
  ('assignment -> identifier MULTIPLICATION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',77),
  ('assignment -> identifier SUBTRACTION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',78),
  ('assignment -> identifier DIVISION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',79),
  ('instruction_if -> IF ( condition ) instruction','instruction_if',5,'p_instruction_if','Mparser.py',87),
  ('instruction_if -> IF ( condition ) instruction ELSE instruction','instruction_if',7,'p_instruction_if','Mparser.py',88),
  ('instruction_loop -> FOR ID = operations : operations instruction','instruction_loop',7,'p_instruction_loop','Mparser.py',99),
  ('instruction_loop -> WHILE ( condition ) instruction','instruction_loop',5,'p_instruction_loop','Mparser.py',100),
  ('instruction_print -> PRINT operations_list','instruction_print',2,'p_instruction_print','Mparser.py',112),
  ('instruction_return -> RETURN operations','instruction_return',2,'p_instruction_return','Mparser.py',120),
  ('instruction_return -> RETURN','instruction_return',1,'p_instruction_return','Mparser.py',121),
  ('condition -> operations','condition',1,'p_condition','Mparser.py',132),
  ('operations -> operations + operations','operations',3,'p_operations_binary','Mparser.py',140),
  ('operations -> operations - operations','operations',3,'p_operations_binary','Mparser.py',141),
  ('operations -> operations * operations','operations',3,'p_operations_binary','Mparser.py',142),
  ('operations -> operations / operations','operations',3,'p_operations_binary','Mparser.py',143),
  ('operations -> operations > operations','operations',3,'p_operations_binary','Mparser.py',144),
  ('operations -> operations < operations','operations',3,'p_operations_binary','Mparser.py',145),
  ('operations -> operations GREATER_OR_EQUAL operations','operations',3,'p_operations_binary','Mparser.py',146),
  ('operations -> operations LESS_OR_EQUAL operations','operations',3,'p_operations_binary','Mparser.py',147),
  ('operations -> operations NOT_EQUAL operations','operations',3,'p_operations_binary','Mparser.py',148),
  ('operations -> operations EQUAL operations','operations',3,'p_operations_binary','Mparser.py',149),
  ('operations -> operations PLUS_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',150),
  ('operations -> operations MINUS_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',151),
  ('operations -> operations MULTIPLY_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',152),
  ('operations -> operations DIVIDE_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',153),
  ('operations -> ( operations )','operations',3,'p_operations_binary','Mparser.py',154),
  ("operations -> ( operations ) '",'operations',4,'p_operations_binary','Mparser.py',155),
  ('operations -> array','operations',1,'p_operations_binary','Mparser.py',156),
  ('operations -> value','operations',1,'p_operations_binary','Mparser.py',157),
  ('operations -> - operations','operations',2,'p_operation_uminus','Mparser.py',171),
  ('value -> identifier','value',1,'p_value','Mparser.py',177),
  ('value -> FLOAT','value',1,'p_value','Mparser.py',178),
  ('value -> INT','value',1,'p_value','Mparser.py',179),
  ('value -> STRING','value',1,'p_value','Mparser.py',180),
  ('value -> ZEROS ( INT )','value',4,'p_value','Mparser.py',181),
  ('value -> ONES ( INT )','value',4,'p_value','Mparser.py',182),
  ('value -> EYE ( INT )','value',4,'p_value','Mparser.py',183),
  ('identifier -> ID','identifier',1,'p_identifier','Mparser.py',202),
  ('identifier -> identifier array','identifier',2,'p_identifier','Mparser.py',203),
  ("identifier -> identifier '",'identifier',2,'p_identifier','Mparser.py',204),
  ('array -> [ array_list ]','array',3,'p_array','Mparser.py',215),
  ('array -> [ operations_list ]','array',3,'p_array','Mparser.py',216),
  ('array_list -> array_list , array','array_list',3,'p_array_list','Mparser.py',221),
  ('array_list -> array','array_list',1,'p_array_list','Mparser.py',222),
  ('operations_list -> operations_list , operations','operations_list',3,'p_operations_list','Mparser.py',230),
  ('operations_list -> operations','operations_list',1,'p_operations_list','Mparser.py',231),
]
