
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=ADDITION_ASSIGNSUBTRACTION_ASSIGNMULTIPLICATION_ASSIGNDIVISION_ASSIGNnonassocNOT_EQUALEQUALnonassocLESS_OR_EQUALGREATER_OR_EQUAL><left+-PLUS_MATRIXMINUS_MATRIXleft*/MULTIPLY_MATRIXDIVIDE_MATRIXnonassocIFXnonassocELSErightUMINUSADDITION_ASSIGN BREAK CONTINUE DIVIDE_MATRIX DIVISION_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER_OR_EQUAL ID IF INT LESS_OR_EQUAL MINUS_MATRIX MULTIPLICATION_ASSIGN MULTIPLY_MATRIX NOT_EQUAL ONES PLUS_MATRIX PRINT RETURN STRING SUBTRACTION_ASSIGN WHILE ZEROSprogram : instructionsinstructions : instructions instruction\n                    | instruction : assignment \';\'\n                           | instruction_if\n                           | instruction_loop\n                           | instruction_print \';\'\n                           | instruction_return \';\'\n                           | BREAK \';\'\n                           | CONTINUE \';\'\n                           | \'{\' instructions \'}\' assignment : identifier \'=\' operations\n                    | identifier ADDITION_ASSIGN operations\n                    | identifier MULTIPLICATION_ASSIGN operations\n                    | identifier SUBTRACTION_ASSIGN operations\n                    | identifier DIVISION_ASSIGN operationsinstruction_if : IF \'(\' condition \')\' instruction %prec IFX\n                      | IF \'(\' condition \')\' instruction ELSE instruction instruction_loop : FOR ID \'=\' operations \':\' operations instruction\n                        | WHILE \'(\' condition \')\' instruction instruction_print : PRINT operations_list instruction_return : RETURN operations\n                            | RETURN condition : operationsoperations : operations \'+\' operations\n                      | operations \'-\' operations\n                      | operations \'*\' operations\n                      | operations \'/\' operations\n                      | operations \'>\' operations\n                      | operations \'<\' operations\n                      | operations GREATER_OR_EQUAL operations\n                      | operations LESS_OR_EQUAL operations\n                      | operations NOT_EQUAL operations\n                      | operations EQUAL operations\n                      | operations PLUS_MATRIX operations\n                      | operations MINUS_MATRIX operations\n                      | operations MULTIPLY_MATRIX operations\n                      | operations DIVIDE_MATRIX operations\n                      | \'(\' operations \')\'\n                      | \'(\' operations \')\' "\'"\n                      | array\n                      | array "\'"\n                      | valueoperations : \'-\' operations %prec UMINUSvalue : identifier\n             | FLOAT\n             | INT\n             | STRING\n             | ZEROS \'(\' INT \')\'\n             | ONES \'(\' INT \')\'\n             | EYE \'(\' INT \')\' identifier : ID\n                | identifier array\n                | identifier "\'" array : \'[\' operations_list \']\' operations_list : operations_list \',\' operations\n                        | operations'
    
_lr_action_items = {'BREAK':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,9,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,9,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,9,9,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,9,9,-18,-19,]),'CONTINUE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,10,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,10,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,10,10,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,10,10,-18,-19,]),'{':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,11,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,11,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,11,11,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,11,11,-18,-19,]),'IF':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,13,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,13,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,13,13,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,13,13,-18,-19,]),'FOR':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,14,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,14,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,14,14,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,14,14,-18,-19,]),'WHILE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,16,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,16,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,16,16,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,16,16,-18,-19,]),'PRINT':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,17,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,17,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,17,17,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,17,17,-18,-19,]),'RETURN':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,107,108,109,110,111,112,113,114,115,],[-3,18,-2,-5,-6,-3,-52,-4,-7,-8,-9,-10,18,-53,-54,-41,-43,-45,-46,-47,-48,-11,-44,-42,-55,18,18,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-49,-50,-51,18,18,-18,-19,]),'ID':([0,2,3,5,6,11,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,38,39,40,41,42,43,44,45,50,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,83,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,],[-3,15,-2,-5,-6,-3,34,-52,15,15,-4,-7,-8,-9,-10,15,15,15,15,15,15,-53,-54,15,15,15,15,15,-41,-43,-45,-46,-47,-48,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-44,-42,-55,15,15,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,15,-20,-40,-49,-50,-51,15,15,-18,-19,]),'$end':([0,1,2,3,5,6,19,20,21,22,23,50,105,107,114,115,],[-3,0,-1,-2,-5,-6,-4,-7,-8,-9,-10,-11,-17,-20,-18,-19,]),'}':([3,5,6,11,19,20,21,22,23,24,50,105,107,114,115,],[-2,-5,-6,-3,-4,-7,-8,-9,-10,50,-11,-17,-20,-18,-19,]),';':([4,7,8,9,10,15,18,30,31,36,37,40,41,42,43,44,45,49,51,52,53,54,55,76,78,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,],[19,20,21,22,23,-52,-23,-53,-54,-21,-57,-41,-43,-45,-46,-47,-48,-22,-12,-13,-14,-15,-16,-44,-42,-55,-56,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-49,-50,-51,]),'ELSE':([5,6,19,20,21,22,23,50,105,107,114,115,],[-5,-6,-4,-7,-8,-9,-10,-11,112,-20,-18,-19,]),'=':([12,15,30,31,34,82,],[25,-52,-53,-54,59,-55,]),'ADDITION_ASSIGN':([12,15,30,31,82,],[26,-52,-53,-54,-55,]),'MULTIPLICATION_ASSIGN':([12,15,30,31,82,],[27,-52,-53,-54,-55,]),'SUBTRACTION_ASSIGN':([12,15,30,31,82,],[28,-52,-53,-54,-55,]),'DIVISION_ASSIGN':([12,15,30,31,82,],[29,-52,-53,-54,-55,]),"'":([12,15,30,31,40,42,82,101,],[31,-52,-53,-54,78,31,-55,108,]),'[':([12,15,17,18,25,26,27,28,29,30,31,32,33,35,38,39,42,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,106,],[32,-52,32,32,32,32,32,32,32,-53,-54,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-55,32,]),'(':([13,16,17,18,25,26,27,28,29,32,33,35,38,39,46,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[33,35,39,39,39,39,39,39,39,39,39,39,39,39,79,80,81,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'+':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,62,-41,-43,-45,-46,-47,-48,62,62,62,62,62,62,62,-44,62,-42,-55,62,62,-25,-26,-27,-28,62,62,62,62,62,62,-35,-36,-37,-38,-39,-40,-49,-50,-51,62,]),'-':([15,17,18,25,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,49,51,52,53,54,55,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,109,110,111,113,],[-52,38,38,38,38,38,38,38,-53,-54,38,38,38,63,38,38,-41,-43,-45,-46,-47,-48,63,63,63,63,63,63,63,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-44,63,-42,-55,63,63,-25,-26,-27,-28,63,63,63,63,63,63,-35,-36,-37,-38,-39,38,-40,-49,-50,-51,63,]),'*':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,64,-41,-43,-45,-46,-47,-48,64,64,64,64,64,64,64,-44,64,-42,-55,64,64,64,64,-27,-28,64,64,64,64,64,64,64,64,-37,-38,-39,-40,-49,-50,-51,64,]),'/':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,65,-41,-43,-45,-46,-47,-48,65,65,65,65,65,65,65,-44,65,-42,-55,65,65,65,65,-27,-28,65,65,65,65,65,65,65,65,-37,-38,-39,-40,-49,-50,-51,65,]),'>':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,66,-41,-43,-45,-46,-47,-48,66,66,66,66,66,66,66,-44,66,-42,-55,66,66,-25,-26,-27,-28,None,None,None,None,66,66,-35,-36,-37,-38,-39,-40,-49,-50,-51,66,]),'<':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,67,-41,-43,-45,-46,-47,-48,67,67,67,67,67,67,67,-44,67,-42,-55,67,67,-25,-26,-27,-28,None,None,None,None,67,67,-35,-36,-37,-38,-39,-40,-49,-50,-51,67,]),'GREATER_OR_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,68,-41,-43,-45,-46,-47,-48,68,68,68,68,68,68,68,-44,68,-42,-55,68,68,-25,-26,-27,-28,None,None,None,None,68,68,-35,-36,-37,-38,-39,-40,-49,-50,-51,68,]),'LESS_OR_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,69,-41,-43,-45,-46,-47,-48,69,69,69,69,69,69,69,-44,69,-42,-55,69,69,-25,-26,-27,-28,None,None,None,None,69,69,-35,-36,-37,-38,-39,-40,-49,-50,-51,69,]),'NOT_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,70,-41,-43,-45,-46,-47,-48,70,70,70,70,70,70,70,-44,70,-42,-55,70,70,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-40,-49,-50,-51,70,]),'EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,71,-41,-43,-45,-46,-47,-48,71,71,71,71,71,71,71,-44,71,-42,-55,71,71,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-40,-49,-50,-51,71,]),'PLUS_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,72,-41,-43,-45,-46,-47,-48,72,72,72,72,72,72,72,-44,72,-42,-55,72,72,-25,-26,-27,-28,72,72,72,72,72,72,-35,-36,-37,-38,-39,-40,-49,-50,-51,72,]),'MINUS_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,73,-41,-43,-45,-46,-47,-48,73,73,73,73,73,73,73,-44,73,-42,-55,73,73,-25,-26,-27,-28,73,73,73,73,73,73,-35,-36,-37,-38,-39,-40,-49,-50,-51,73,]),'MULTIPLY_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,74,-41,-43,-45,-46,-47,-48,74,74,74,74,74,74,74,-44,74,-42,-55,74,74,74,74,-27,-28,74,74,74,74,74,74,74,74,-37,-38,-39,-40,-49,-50,-51,74,]),'DIVIDE_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,78,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,113,],[-52,-53,-54,75,-41,-43,-45,-46,-47,-48,75,75,75,75,75,75,75,-44,75,-42,-55,75,75,75,75,-27,-28,75,75,75,75,75,75,75,75,-37,-38,-39,-40,-49,-50,-51,75,]),',':([15,30,31,36,37,40,41,42,43,44,45,56,76,78,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,],[-52,-53,-54,61,-57,-41,-43,-45,-46,-47,-48,61,-44,-42,-55,-56,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-49,-50,-51,]),']':([15,30,31,37,40,41,42,43,44,45,56,76,78,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,],[-52,-53,-54,-57,-41,-43,-45,-46,-47,-48,82,-44,-42,-55,-56,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-49,-50,-51,]),')':([15,30,31,40,41,42,43,44,45,57,58,60,76,77,78,82,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,],[-52,-53,-54,-41,-43,-45,-46,-47,-48,83,-24,85,-44,101,-42,-55,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,109,110,111,-40,-49,-50,-51,]),':':([15,30,31,40,41,42,43,44,45,76,78,82,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,108,109,110,111,],[-52,-53,-54,-41,-43,-45,-46,-47,-48,-44,-42,-55,106,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-49,-50,-51,]),'FLOAT':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INT':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,106,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,102,103,104,44,]),'STRING':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ZEROS':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ONES':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'EYE':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,11,],[2,24,]),'instruction':([2,24,83,85,112,113,],[3,3,105,107,114,115,]),'assignment':([2,24,83,85,112,113,],[4,4,4,4,4,4,]),'instruction_if':([2,24,83,85,112,113,],[5,5,5,5,5,5,]),'instruction_loop':([2,24,83,85,112,113,],[6,6,6,6,6,6,]),'instruction_print':([2,24,83,85,112,113,],[7,7,7,7,7,7,]),'instruction_return':([2,24,83,85,112,113,],[8,8,8,8,8,8,]),'identifier':([2,17,18,24,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,83,85,106,112,113,],[12,42,42,12,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,12,12,42,12,12,]),'array':([12,17,18,25,26,27,28,29,32,33,35,38,39,42,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[30,40,40,40,40,40,40,40,40,40,40,40,40,30,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'operations_list':([17,32,],[36,56,]),'operations':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[37,49,51,52,53,54,55,37,58,58,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,113,]),'value':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,106,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condition':([33,35,],[57,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',37),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',45),
  ('instructions -> <empty>','instructions',0,'p_instructions','Mparser.py',46),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',55),
  ('instruction -> instruction_if','instruction',1,'p_instruction','Mparser.py',56),
  ('instruction -> instruction_loop','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> instruction_print ;','instruction',2,'p_instruction','Mparser.py',58),
  ('instruction -> instruction_return ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',62),
  ('assignment -> identifier = operations','assignment',3,'p_assignments','Mparser.py',75),
  ('assignment -> identifier ADDITION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',76),
  ('assignment -> identifier MULTIPLICATION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',77),
  ('assignment -> identifier SUBTRACTION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',78),
  ('assignment -> identifier DIVISION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',79),
  ('instruction_if -> IF ( condition ) instruction','instruction_if',5,'p_instruction_if','Mparser.py',85),
  ('instruction_if -> IF ( condition ) instruction ELSE instruction','instruction_if',7,'p_instruction_if','Mparser.py',86),
  ('instruction_loop -> FOR ID = operations : operations instruction','instruction_loop',7,'p_instruction_loop','Mparser.py',95),
  ('instruction_loop -> WHILE ( condition ) instruction','instruction_loop',5,'p_instruction_loop','Mparser.py',96),
  ('instruction_print -> PRINT operations_list','instruction_print',2,'p_instruction_print','Mparser.py',106),
  ('instruction_return -> RETURN operations','instruction_return',2,'p_instruction_return','Mparser.py',112),
  ('instruction_return -> RETURN','instruction_return',1,'p_instruction_return','Mparser.py',113),
  ('condition -> operations','condition',1,'p_condition','Mparser.py',122),
  ('operations -> operations + operations','operations',3,'p_operations','Mparser.py',128),
  ('operations -> operations - operations','operations',3,'p_operations','Mparser.py',129),
  ('operations -> operations * operations','operations',3,'p_operations','Mparser.py',130),
  ('operations -> operations / operations','operations',3,'p_operations','Mparser.py',131),
  ('operations -> operations > operations','operations',3,'p_operations','Mparser.py',132),
  ('operations -> operations < operations','operations',3,'p_operations','Mparser.py',133),
  ('operations -> operations GREATER_OR_EQUAL operations','operations',3,'p_operations','Mparser.py',134),
  ('operations -> operations LESS_OR_EQUAL operations','operations',3,'p_operations','Mparser.py',135),
  ('operations -> operations NOT_EQUAL operations','operations',3,'p_operations','Mparser.py',136),
  ('operations -> operations EQUAL operations','operations',3,'p_operations','Mparser.py',137),
  ('operations -> operations PLUS_MATRIX operations','operations',3,'p_operations','Mparser.py',138),
  ('operations -> operations MINUS_MATRIX operations','operations',3,'p_operations','Mparser.py',139),
  ('operations -> operations MULTIPLY_MATRIX operations','operations',3,'p_operations','Mparser.py',140),
  ('operations -> operations DIVIDE_MATRIX operations','operations',3,'p_operations','Mparser.py',141),
  ('operations -> ( operations )','operations',3,'p_operations','Mparser.py',142),
  ("operations -> ( operations ) '",'operations',4,'p_operations','Mparser.py',143),
  ('operations -> array','operations',1,'p_operations','Mparser.py',144),
  ("operations -> array '",'operations',2,'p_operations','Mparser.py',145),
  ('operations -> value','operations',1,'p_operations','Mparser.py',146),
  ('operations -> - operations','operations',2,'p_operation_uminus','Mparser.py',163),
  ('value -> identifier','value',1,'p_value','Mparser.py',169),
  ('value -> FLOAT','value',1,'p_value','Mparser.py',170),
  ('value -> INT','value',1,'p_value','Mparser.py',171),
  ('value -> STRING','value',1,'p_value','Mparser.py',172),
  ('value -> ZEROS ( INT )','value',4,'p_value','Mparser.py',173),
  ('value -> ONES ( INT )','value',4,'p_value','Mparser.py',174),
  ('value -> EYE ( INT )','value',4,'p_value','Mparser.py',175),
  ('identifier -> ID','identifier',1,'p_identifier','Mparser.py',194),
  ('identifier -> identifier array','identifier',2,'p_identifier','Mparser.py',195),
  ("identifier -> identifier '",'identifier',2,'p_identifier','Mparser.py',196),
  ('array -> [ operations_list ]','array',3,'p_array','Mparser.py',207),
  ('operations_list -> operations_list , operations','operations_list',3,'p_operations_list','Mparser.py',213),
  ('operations_list -> operations','operations_list',1,'p_operations_list','Mparser.py',214),
]
