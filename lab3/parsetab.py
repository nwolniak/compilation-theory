
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEright=ADDITION_ASSIGNSUBTRACTION_ASSIGNMULTIPLICATION_ASSIGNDIVISION_ASSIGNnonassocNOT_EQUALEQUALnonassocLESS_OR_EQUALGREATER_OR_EQUAL><left+-PLUS_MATRIXMINUS_MATRIXleft*/MULTIPLY_MATRIXDIVIDE_MATRIXrightUMINUSADDITION_ASSIGN BREAK CONTINUE DIVIDE_MATRIX DIVISION_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER_OR_EQUAL ID IF INT LESS_OR_EQUAL MINUS_MATRIX MULTIPLICATION_ASSIGN MULTIPLY_MATRIX NOT_EQUAL ONES PLUS_MATRIX PRINT RETURN STRING SUBTRACTION_ASSIGN WHILE ZEROSprogram : instructionsinstructions : instructions instruction\n                    | instruction : assignment \';\'\n                           | instruction_if\n                           | instruction_loop\n                           | instruction_print \';\'\n                           | instruction_return \';\'\n                           | BREAK \';\'\n                           | CONTINUE \';\'\n                           | \'{\' instructions \'}\' assignment : identifier \'=\' operations\n                    | identifier ADDITION_ASSIGN operations\n                    | identifier MULTIPLICATION_ASSIGN operations\n                    | identifier SUBTRACTION_ASSIGN operations\n                    | identifier DIVISION_ASSIGN operationsinstruction_if : IF \'(\' condition \')\' instruction %prec IFX\n                      | IF \'(\' condition \')\' instruction ELSE instruction instruction_loop : FOR ID \'=\' operations \':\' operations instruction\n                        | WHILE \'(\' condition \')\' instruction instruction_print : PRINT operations_list instruction_return : RETURN operations\n                            | RETURN condition : operationsoperations : operations \'+\' operations\n                      | operations \'-\' operations\n                      | operations \'*\' operations\n                      | operations \'/\' operations\n                      | operations \'>\' operations\n                      | operations \'<\' operations\n                      | operations GREATER_OR_EQUAL operations\n                      | operations LESS_OR_EQUAL operations\n                      | operations NOT_EQUAL operations\n                      | operations EQUAL operations\n                      | operations PLUS_MATRIX operations\n                      | operations MINUS_MATRIX operations\n                      | operations MULTIPLY_MATRIX operations\n                      | operations DIVIDE_MATRIX operations\n                      | \'(\' operations \')\'\n                      | operations "\'"\n                      | array\n                      | valueoperations : \'-\' operations %prec UMINUSvalue : identifier\n             | FLOAT\n             | INT\n             | STRING\n             | ZEROS \'(\' INT \')\'\n             | ONES \'(\' INT \')\'\n             | EYE \'(\' INT \')\' identifier : ID\n                | identifier array array : \'[\' operations_list \']\' operations_list : operations_list \',\' operations\n                        | operations'
    
_lr_action_items = {'BREAK':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,9,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,9,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,9,9,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,9,9,-18,-19,]),'CONTINUE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,10,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,10,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,10,10,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,10,10,-18,-19,]),'{':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,11,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,11,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,11,11,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,11,11,-18,-19,]),'IF':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,13,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,13,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,13,13,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,13,13,-18,-19,]),'FOR':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,14,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,14,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,14,14,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,14,14,-18,-19,]),'WHILE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,16,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,16,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,16,16,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,16,16,-18,-19,]),'PRINT':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,17,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,17,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,17,17,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,17,17,-18,-19,]),'RETURN':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,39,40,41,42,43,44,49,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,],[-3,18,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,18,-52,-41,-42,-44,-45,-46,-47,-11,-40,-43,-53,18,18,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-48,-49,-50,18,18,-18,-19,]),'ID':([0,2,3,5,6,11,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,37,38,39,40,41,42,43,44,49,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,],[-3,15,-2,-5,-6,-3,33,-51,15,15,-4,-7,-8,-9,-10,15,15,15,15,15,15,-52,15,15,15,15,15,-41,-42,-44,-45,-46,-47,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-40,-43,-53,15,15,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,15,-20,-48,-49,-50,15,15,-18,-19,]),'$end':([0,1,2,3,5,6,19,20,21,22,23,49,104,106,112,113,],[-3,0,-1,-2,-5,-6,-4,-7,-8,-9,-10,-11,-17,-20,-18,-19,]),'}':([3,5,6,11,19,20,21,22,23,24,49,104,106,112,113,],[-2,-5,-6,-3,-4,-7,-8,-9,-10,49,-11,-17,-20,-18,-19,]),';':([4,7,8,9,10,15,18,30,35,36,39,40,41,42,43,44,48,50,51,52,53,54,75,76,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,],[19,20,21,22,23,-51,-23,-52,-21,-55,-41,-42,-44,-45,-46,-47,-22,-12,-13,-14,-15,-16,-40,-43,-53,-54,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-49,-50,]),'ELSE':([5,6,19,20,21,22,23,49,104,106,112,113,],[-5,-6,-4,-7,-8,-9,-10,-11,110,-20,-18,-19,]),'=':([12,15,30,33,81,],[25,-51,-52,58,-53,]),'ADDITION_ASSIGN':([12,15,30,81,],[26,-51,-52,-53,]),'MULTIPLICATION_ASSIGN':([12,15,30,81,],[27,-51,-52,-53,]),'SUBTRACTION_ASSIGN':([12,15,30,81,],[28,-51,-52,-53,]),'DIVISION_ASSIGN':([12,15,30,81,],[29,-51,-52,-53,]),'[':([12,15,17,18,25,26,27,28,29,30,31,32,34,37,38,41,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,81,105,],[31,-51,31,31,31,31,31,31,31,-52,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-53,31,]),'(':([13,16,17,18,25,26,27,28,29,31,32,34,37,38,45,46,47,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[32,34,38,38,38,38,38,38,38,38,38,38,38,38,78,79,80,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'+':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,61,-41,-42,-44,-45,-46,-47,61,61,61,61,61,61,61,-40,-43,61,-53,61,61,-25,-26,-27,-28,61,61,61,61,61,61,-35,-36,-37,-38,-39,-48,-49,-50,61,]),'-':([15,17,18,25,26,27,28,29,30,31,32,34,36,37,38,39,40,41,42,43,44,48,50,51,52,53,54,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,107,108,109,111,],[-51,37,37,37,37,37,37,37,-52,37,37,37,62,37,37,-41,-42,-44,-45,-46,-47,62,62,62,62,62,62,62,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-40,-43,62,-53,62,62,-25,-26,-27,-28,62,62,62,62,62,62,-35,-36,-37,-38,-39,37,-48,-49,-50,62,]),'*':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,63,-41,-42,-44,-45,-46,-47,63,63,63,63,63,63,63,-40,-43,63,-53,63,63,63,63,-27,-28,63,63,63,63,63,63,63,63,-37,-38,-39,-48,-49,-50,63,]),'/':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,64,-41,-42,-44,-45,-46,-47,64,64,64,64,64,64,64,-40,-43,64,-53,64,64,64,64,-27,-28,64,64,64,64,64,64,64,64,-37,-38,-39,-48,-49,-50,64,]),'>':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,65,-41,-42,-44,-45,-46,-47,65,65,65,65,65,65,65,-40,-43,65,-53,65,65,-25,-26,-27,-28,None,None,None,None,65,65,-35,-36,-37,-38,-39,-48,-49,-50,65,]),'<':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,66,-41,-42,-44,-45,-46,-47,66,66,66,66,66,66,66,-40,-43,66,-53,66,66,-25,-26,-27,-28,None,None,None,None,66,66,-35,-36,-37,-38,-39,-48,-49,-50,66,]),'GREATER_OR_EQUAL':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,67,-41,-42,-44,-45,-46,-47,67,67,67,67,67,67,67,-40,-43,67,-53,67,67,-25,-26,-27,-28,None,None,None,None,67,67,-35,-36,-37,-38,-39,-48,-49,-50,67,]),'LESS_OR_EQUAL':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,68,-41,-42,-44,-45,-46,-47,68,68,68,68,68,68,68,-40,-43,68,-53,68,68,-25,-26,-27,-28,None,None,None,None,68,68,-35,-36,-37,-38,-39,-48,-49,-50,68,]),'NOT_EQUAL':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,69,-41,-42,-44,-45,-46,-47,69,69,69,69,69,69,69,-40,-43,69,-53,69,69,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-48,-49,-50,69,]),'EQUAL':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,70,-41,-42,-44,-45,-46,-47,70,70,70,70,70,70,70,-40,-43,70,-53,70,70,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-48,-49,-50,70,]),'PLUS_MATRIX':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,71,-41,-42,-44,-45,-46,-47,71,71,71,71,71,71,71,-40,-43,71,-53,71,71,-25,-26,-27,-28,71,71,71,71,71,71,-35,-36,-37,-38,-39,-48,-49,-50,71,]),'MINUS_MATRIX':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,72,-41,-42,-44,-45,-46,-47,72,72,72,72,72,72,72,-40,-43,72,-53,72,72,-25,-26,-27,-28,72,72,72,72,72,72,-35,-36,-37,-38,-39,-48,-49,-50,72,]),'MULTIPLY_MATRIX':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,73,-41,-42,-44,-45,-46,-47,73,73,73,73,73,73,73,-40,-43,73,-53,73,73,73,73,-27,-28,73,73,73,73,73,73,73,73,-37,-38,-39,-48,-49,-50,73,]),'DIVIDE_MATRIX':([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,74,-41,-42,-44,-45,-46,-47,74,74,74,74,74,74,74,-40,-43,74,-53,74,74,74,74,-27,-28,74,74,74,74,74,74,74,74,-37,-38,-39,-48,-49,-50,74,]),"'":([15,30,36,39,40,41,42,43,44,48,50,51,52,53,54,57,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,111,],[-51,-52,75,-41,-42,-44,-45,-46,-47,75,75,75,75,75,75,75,-40,-43,75,-53,75,75,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-49,-50,75,]),',':([15,30,35,36,39,40,41,42,43,44,55,75,76,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,],[-51,-52,60,-55,-41,-42,-44,-45,-46,-47,60,-40,-43,-53,-54,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-49,-50,]),']':([15,30,36,39,40,41,42,43,44,55,75,76,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,],[-51,-52,-55,-41,-42,-44,-45,-46,-47,81,-40,-43,-53,-54,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-49,-50,]),')':([15,30,39,40,41,42,43,44,56,57,59,75,76,77,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,],[-51,-52,-41,-42,-44,-45,-46,-47,82,-24,84,-40,-43,100,-53,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,107,108,109,-48,-49,-50,]),':':([15,30,39,40,41,42,43,44,75,76,81,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,],[-51,-52,-41,-42,-44,-45,-46,-47,-40,-43,-53,105,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-48,-49,-50,]),'FLOAT':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'INT':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,105,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,101,102,103,43,]),'STRING':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ZEROS':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ONES':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'EYE':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,11,],[2,24,]),'instruction':([2,24,82,84,110,111,],[3,3,104,106,112,113,]),'assignment':([2,24,82,84,110,111,],[4,4,4,4,4,4,]),'instruction_if':([2,24,82,84,110,111,],[5,5,5,5,5,5,]),'instruction_loop':([2,24,82,84,110,111,],[6,6,6,6,6,6,]),'instruction_print':([2,24,82,84,110,111,],[7,7,7,7,7,7,]),'instruction_return':([2,24,82,84,110,111,],[8,8,8,8,8,8,]),'identifier':([2,17,18,24,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,105,110,111,],[12,41,41,12,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,12,12,41,12,12,]),'array':([12,17,18,25,26,27,28,29,31,32,34,37,38,41,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[30,39,39,39,39,39,39,39,39,39,39,39,39,30,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'operations_list':([17,31,],[35,55,]),'operations':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[36,48,50,51,52,53,54,36,57,57,76,77,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,111,]),'value':([17,18,25,26,27,28,29,31,32,34,37,38,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,105,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'condition':([32,34,],[56,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',37),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',45),
  ('instructions -> <empty>','instructions',0,'p_instructions','Mparser.py',46),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',55),
  ('instruction -> instruction_if','instruction',1,'p_instruction','Mparser.py',56),
  ('instruction -> instruction_loop','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> instruction_print ;','instruction',2,'p_instruction','Mparser.py',58),
  ('instruction -> instruction_return ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',60),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',61),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',62),
  ('assignment -> identifier = operations','assignment',3,'p_assignments','Mparser.py',75),
  ('assignment -> identifier ADDITION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',76),
  ('assignment -> identifier MULTIPLICATION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',77),
  ('assignment -> identifier SUBTRACTION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',78),
  ('assignment -> identifier DIVISION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',79),
  ('instruction_if -> IF ( condition ) instruction','instruction_if',5,'p_instruction_if','Mparser.py',85),
  ('instruction_if -> IF ( condition ) instruction ELSE instruction','instruction_if',7,'p_instruction_if','Mparser.py',86),
  ('instruction_loop -> FOR ID = operations : operations instruction','instruction_loop',7,'p_instruction_loop','Mparser.py',95),
  ('instruction_loop -> WHILE ( condition ) instruction','instruction_loop',5,'p_instruction_loop','Mparser.py',96),
  ('instruction_print -> PRINT operations_list','instruction_print',2,'p_instruction_print','Mparser.py',106),
  ('instruction_return -> RETURN operations','instruction_return',2,'p_instruction_return','Mparser.py',112),
  ('instruction_return -> RETURN','instruction_return',1,'p_instruction_return','Mparser.py',113),
  ('condition -> operations','condition',1,'p_condition','Mparser.py',122),
  ('operations -> operations + operations','operations',3,'p_operations','Mparser.py',128),
  ('operations -> operations - operations','operations',3,'p_operations','Mparser.py',129),
  ('operations -> operations * operations','operations',3,'p_operations','Mparser.py',130),
  ('operations -> operations / operations','operations',3,'p_operations','Mparser.py',131),
  ('operations -> operations > operations','operations',3,'p_operations','Mparser.py',132),
  ('operations -> operations < operations','operations',3,'p_operations','Mparser.py',133),
  ('operations -> operations GREATER_OR_EQUAL operations','operations',3,'p_operations','Mparser.py',134),
  ('operations -> operations LESS_OR_EQUAL operations','operations',3,'p_operations','Mparser.py',135),
  ('operations -> operations NOT_EQUAL operations','operations',3,'p_operations','Mparser.py',136),
  ('operations -> operations EQUAL operations','operations',3,'p_operations','Mparser.py',137),
  ('operations -> operations PLUS_MATRIX operations','operations',3,'p_operations','Mparser.py',138),
  ('operations -> operations MINUS_MATRIX operations','operations',3,'p_operations','Mparser.py',139),
  ('operations -> operations MULTIPLY_MATRIX operations','operations',3,'p_operations','Mparser.py',140),
  ('operations -> operations DIVIDE_MATRIX operations','operations',3,'p_operations','Mparser.py',141),
  ('operations -> ( operations )','operations',3,'p_operations','Mparser.py',142),
  ("operations -> operations '",'operations',2,'p_operations','Mparser.py',143),
  ('operations -> array','operations',1,'p_operations','Mparser.py',144),
  ('operations -> value','operations',1,'p_operations','Mparser.py',145),
  ('operations -> - operations','operations',2,'p_operation_uminus','Mparser.py',159),
  ('value -> identifier','value',1,'p_value','Mparser.py',165),
  ('value -> FLOAT','value',1,'p_value','Mparser.py',166),
  ('value -> INT','value',1,'p_value','Mparser.py',167),
  ('value -> STRING','value',1,'p_value','Mparser.py',168),
  ('value -> ZEROS ( INT )','value',4,'p_value','Mparser.py',169),
  ('value -> ONES ( INT )','value',4,'p_value','Mparser.py',170),
  ('value -> EYE ( INT )','value',4,'p_value','Mparser.py',171),
  ('identifier -> ID','identifier',1,'p_identifier','Mparser.py',190),
  ('identifier -> identifier array','identifier',2,'p_identifier','Mparser.py',191),
  ('array -> [ operations_list ]','array',3,'p_array','Mparser.py',200),
  ('operations_list -> operations_list , operations','operations_list',3,'p_operations_list','Mparser.py',206),
  ('operations_list -> operations','operations_list',1,'p_operations_list','Mparser.py',207),
]
