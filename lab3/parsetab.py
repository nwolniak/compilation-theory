
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=ADDITION_ASSIGNSUBTRACTION_ASSIGNMULTIPLICATION_ASSIGNDIVISION_ASSIGNnonassocNOT_EQUALEQUALnonassocLESS_OR_EQUALGREATER_OR_EQUAL><left+-PLUS_MATRIXMINUS_MATRIXleft*/MULTIPLY_MATRIXDIVIDE_MATRIXnonassocIFXnonassocELSErightUMINUSADDITION_ASSIGN BREAK CONTINUE DIVIDE_MATRIX DIVISION_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER_OR_EQUAL ID IF INT LESS_OR_EQUAL MINUS_MATRIX MULTIPLICATION_ASSIGN MULTIPLY_MATRIX NOT_EQUAL ONES PLUS_MATRIX PRINT RETURN STRING SUBTRACTION_ASSIGN WHILE ZEROSprogram : instructionsinstructions : instructions instruction\n                    | instruction : assignment \';\'\n                           | instruction_if\n                           | instruction_loop\n                           | instruction_print \';\'\n                           | instruction_return \';\'\n                           | BREAK \';\'\n                           | CONTINUE \';\'\n                           | \'{\' instructions \'}\' assignment : identifier \'=\' operations\n                    | identifier ADDITION_ASSIGN operations\n                    | identifier MULTIPLICATION_ASSIGN operations\n                    | identifier SUBTRACTION_ASSIGN operations\n                    | identifier DIVISION_ASSIGN operationsinstruction_if : IF \'(\' condition \')\' instruction %prec IFX\n                      | IF \'(\' condition \')\' instruction ELSE instruction instruction_loop : FOR ID \'=\' operations \':\' operations instruction\n                        | WHILE \'(\' condition \')\' instruction instruction_print : PRINT operations_list instruction_return : RETURN operations\n                            | RETURN condition : operationsoperations : operations \'+\' operations\n                      | operations \'-\' operations\n                      | operations \'*\' operations\n                      | operations \'/\' operations\n                      | operations \'>\' operations\n                      | operations \'<\' operations\n                      | operations GREATER_OR_EQUAL operations\n                      | operations LESS_OR_EQUAL operations\n                      | operations NOT_EQUAL operations\n                      | operations EQUAL operations\n                      | operations PLUS_MATRIX operations\n                      | operations MINUS_MATRIX operations\n                      | operations MULTIPLY_MATRIX operations\n                      | operations DIVIDE_MATRIX operations\n                      | \'(\' operations \')\'\n                      | \'(\' operations \')\' "\'"\n                      | array\n                      | valueoperations : \'-\' operations %prec UMINUSvalue : identifier\n             | FLOAT\n             | INT\n             | STRING\n             | ZEROS \'(\' INT \')\'\n             | ONES \'(\' INT \')\'\n             | EYE \'(\' INT \')\' identifier : ID\n                | identifier array\n                | identifier "\'" array : \'[\' operations_list \']\' operations_list : operations_list \',\' operations\n                        | operations'
    
_lr_action_items = {'BREAK':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,9,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,9,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,9,9,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,9,9,-18,-19,]),'CONTINUE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,10,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,10,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,10,10,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,10,10,-18,-19,]),'{':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,11,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,11,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,11,11,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,11,11,-18,-19,]),'IF':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,13,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,13,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,13,13,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,13,13,-18,-19,]),'FOR':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,14,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,14,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,14,14,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,14,14,-18,-19,]),'WHILE':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,16,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,16,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,16,16,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,16,16,-18,-19,]),'PRINT':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,17,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,17,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,17,17,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,17,17,-18,-19,]),'RETURN':([0,2,3,5,6,11,15,19,20,21,22,23,24,30,31,40,41,42,43,44,45,50,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,106,107,108,109,110,111,112,113,114,],[-3,18,-2,-5,-6,-3,-51,-4,-7,-8,-9,-10,18,-52,-53,-41,-42,-44,-45,-46,-47,-11,-43,-54,18,18,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,-20,-40,-48,-49,-50,18,18,-18,-19,]),'ID':([0,2,3,5,6,11,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,38,39,40,41,42,43,44,45,50,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,81,82,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,109,110,111,112,113,114,],[-3,15,-2,-5,-6,-3,34,-51,15,15,-4,-7,-8,-9,-10,15,15,15,15,15,15,-52,-53,15,15,15,15,15,-41,-42,-44,-45,-46,-47,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-43,-54,15,15,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-17,15,-20,-40,-48,-49,-50,15,15,-18,-19,]),'$end':([0,1,2,3,5,6,19,20,21,22,23,50,104,106,113,114,],[-3,0,-1,-2,-5,-6,-4,-7,-8,-9,-10,-11,-17,-20,-18,-19,]),'}':([3,5,6,11,19,20,21,22,23,24,50,104,106,113,114,],[-2,-5,-6,-3,-4,-7,-8,-9,-10,50,-11,-17,-20,-18,-19,]),';':([4,7,8,9,10,15,18,30,31,36,37,40,41,42,43,44,45,49,51,52,53,54,55,76,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,],[19,20,21,22,23,-51,-23,-52,-53,-21,-56,-41,-42,-44,-45,-46,-47,-22,-12,-13,-14,-15,-16,-43,-54,-55,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-50,]),'ELSE':([5,6,19,20,21,22,23,50,104,106,113,114,],[-5,-6,-4,-7,-8,-9,-10,-11,111,-20,-18,-19,]),'=':([12,15,30,31,34,81,],[25,-51,-52,-53,59,-54,]),'ADDITION_ASSIGN':([12,15,30,31,81,],[26,-51,-52,-53,-54,]),'MULTIPLICATION_ASSIGN':([12,15,30,31,81,],[27,-51,-52,-53,-54,]),'SUBTRACTION_ASSIGN':([12,15,30,31,81,],[28,-51,-52,-53,-54,]),'DIVISION_ASSIGN':([12,15,30,31,81,],[29,-51,-52,-53,-54,]),"'":([12,15,30,31,42,81,100,],[31,-51,-52,-53,31,-54,107,]),'[':([12,15,17,18,25,26,27,28,29,30,31,32,33,35,38,39,42,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,105,],[32,-51,32,32,32,32,32,32,32,-52,-53,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-54,32,]),'(':([13,16,17,18,25,26,27,28,29,32,33,35,38,39,46,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[33,35,39,39,39,39,39,39,39,39,39,39,39,39,78,79,80,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'+':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,62,-41,-42,-44,-45,-46,-47,62,62,62,62,62,62,62,-43,62,-54,62,62,-25,-26,-27,-28,62,62,62,62,62,62,-35,-36,-37,-38,-39,-40,-48,-49,-50,62,]),'-':([15,17,18,25,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,49,51,52,53,54,55,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,107,108,109,110,112,],[-51,38,38,38,38,38,38,38,-52,-53,38,38,38,63,38,38,-41,-42,-44,-45,-46,-47,63,63,63,63,63,63,63,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-43,63,-54,63,63,-25,-26,-27,-28,63,63,63,63,63,63,-35,-36,-37,-38,-39,38,-40,-48,-49,-50,63,]),'*':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,64,-41,-42,-44,-45,-46,-47,64,64,64,64,64,64,64,-43,64,-54,64,64,64,64,-27,-28,64,64,64,64,64,64,64,64,-37,-38,-39,-40,-48,-49,-50,64,]),'/':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,65,-41,-42,-44,-45,-46,-47,65,65,65,65,65,65,65,-43,65,-54,65,65,65,65,-27,-28,65,65,65,65,65,65,65,65,-37,-38,-39,-40,-48,-49,-50,65,]),'>':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,66,-41,-42,-44,-45,-46,-47,66,66,66,66,66,66,66,-43,66,-54,66,66,-25,-26,-27,-28,None,None,None,None,66,66,-35,-36,-37,-38,-39,-40,-48,-49,-50,66,]),'<':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,67,-41,-42,-44,-45,-46,-47,67,67,67,67,67,67,67,-43,67,-54,67,67,-25,-26,-27,-28,None,None,None,None,67,67,-35,-36,-37,-38,-39,-40,-48,-49,-50,67,]),'GREATER_OR_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,68,-41,-42,-44,-45,-46,-47,68,68,68,68,68,68,68,-43,68,-54,68,68,-25,-26,-27,-28,None,None,None,None,68,68,-35,-36,-37,-38,-39,-40,-48,-49,-50,68,]),'LESS_OR_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,69,-41,-42,-44,-45,-46,-47,69,69,69,69,69,69,69,-43,69,-54,69,69,-25,-26,-27,-28,None,None,None,None,69,69,-35,-36,-37,-38,-39,-40,-48,-49,-50,69,]),'NOT_EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,70,-41,-42,-44,-45,-46,-47,70,70,70,70,70,70,70,-43,70,-54,70,70,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-40,-48,-49,-50,70,]),'EQUAL':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,71,-41,-42,-44,-45,-46,-47,71,71,71,71,71,71,71,-43,71,-54,71,71,-25,-26,-27,-28,-29,-30,-31,-32,None,None,-35,-36,-37,-38,-39,-40,-48,-49,-50,71,]),'PLUS_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,72,-41,-42,-44,-45,-46,-47,72,72,72,72,72,72,72,-43,72,-54,72,72,-25,-26,-27,-28,72,72,72,72,72,72,-35,-36,-37,-38,-39,-40,-48,-49,-50,72,]),'MINUS_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,73,-41,-42,-44,-45,-46,-47,73,73,73,73,73,73,73,-43,73,-54,73,73,-25,-26,-27,-28,73,73,73,73,73,73,-35,-36,-37,-38,-39,-40,-48,-49,-50,73,]),'MULTIPLY_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,74,-41,-42,-44,-45,-46,-47,74,74,74,74,74,74,74,-43,74,-54,74,74,74,74,-27,-28,74,74,74,74,74,74,74,74,-37,-38,-39,-40,-48,-49,-50,74,]),'DIVIDE_MATRIX':([15,30,31,37,40,41,42,43,44,45,49,51,52,53,54,55,58,76,77,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,112,],[-51,-52,-53,75,-41,-42,-44,-45,-46,-47,75,75,75,75,75,75,75,-43,75,-54,75,75,75,75,-27,-28,75,75,75,75,75,75,75,75,-37,-38,-39,-40,-48,-49,-50,75,]),',':([15,30,31,36,37,40,41,42,43,44,45,56,76,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,],[-51,-52,-53,61,-56,-41,-42,-44,-45,-46,-47,61,-43,-54,-55,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-50,]),']':([15,30,31,37,40,41,42,43,44,45,56,76,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,],[-51,-52,-53,-56,-41,-42,-44,-45,-46,-47,81,-43,-54,-55,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-50,]),')':([15,30,31,40,41,42,43,44,45,57,58,60,76,77,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,],[-51,-52,-53,-41,-42,-44,-45,-46,-47,82,-24,84,-43,100,-54,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,108,109,110,-40,-48,-49,-50,]),':':([15,30,31,40,41,42,43,44,45,76,81,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,109,110,],[-51,-52,-53,-41,-42,-44,-45,-46,-47,-43,-54,105,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-48,-49,-50,]),'FLOAT':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INT':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,105,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,101,102,103,44,]),'STRING':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ZEROS':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ONES':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'EYE':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,11,],[2,24,]),'instruction':([2,24,82,84,111,112,],[3,3,104,106,113,114,]),'assignment':([2,24,82,84,111,112,],[4,4,4,4,4,4,]),'instruction_if':([2,24,82,84,111,112,],[5,5,5,5,5,5,]),'instruction_loop':([2,24,82,84,111,112,],[6,6,6,6,6,6,]),'instruction_print':([2,24,82,84,111,112,],[7,7,7,7,7,7,]),'instruction_return':([2,24,82,84,111,112,],[8,8,8,8,8,8,]),'identifier':([2,17,18,24,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,84,105,111,112,],[12,42,42,12,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,12,12,42,12,12,]),'array':([12,17,18,25,26,27,28,29,32,33,35,38,39,42,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[30,40,40,40,40,40,40,40,40,40,40,40,40,30,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'operations_list':([17,32,],[36,56,]),'operations':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[37,49,51,52,53,54,55,37,58,58,76,77,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,112,]),'value':([17,18,25,26,27,28,29,32,33,35,38,39,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,105,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condition':([33,35,],[57,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',33),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',41),
  ('instructions -> <empty>','instructions',0,'p_instructions','Mparser.py',42),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',53),
  ('instruction -> instruction_if','instruction',1,'p_instruction','Mparser.py',54),
  ('instruction -> instruction_loop','instruction',1,'p_instruction','Mparser.py',55),
  ('instruction -> instruction_print ;','instruction',2,'p_instruction','Mparser.py',56),
  ('instruction -> instruction_return ;','instruction',2,'p_instruction','Mparser.py',57),
  ('instruction -> BREAK ;','instruction',2,'p_instruction','Mparser.py',58),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction','Mparser.py',59),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',60),
  ('assignment -> identifier = operations','assignment',3,'p_assignments','Mparser.py',75),
  ('assignment -> identifier ADDITION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',76),
  ('assignment -> identifier MULTIPLICATION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',77),
  ('assignment -> identifier SUBTRACTION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',78),
  ('assignment -> identifier DIVISION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',79),
  ('instruction_if -> IF ( condition ) instruction','instruction_if',5,'p_instruction_if','Mparser.py',87),
  ('instruction_if -> IF ( condition ) instruction ELSE instruction','instruction_if',7,'p_instruction_if','Mparser.py',88),
  ('instruction_loop -> FOR ID = operations : operations instruction','instruction_loop',7,'p_instruction_loop','Mparser.py',99),
  ('instruction_loop -> WHILE ( condition ) instruction','instruction_loop',5,'p_instruction_loop','Mparser.py',100),
  ('instruction_print -> PRINT operations_list','instruction_print',2,'p_instruction_print','Mparser.py',112),
  ('instruction_return -> RETURN operations','instruction_return',2,'p_instruction_return','Mparser.py',120),
  ('instruction_return -> RETURN','instruction_return',1,'p_instruction_return','Mparser.py',121),
  ('condition -> operations','condition',1,'p_condition','Mparser.py',132),
  ('operations -> operations + operations','operations',3,'p_operations_binary','Mparser.py',140),
  ('operations -> operations - operations','operations',3,'p_operations_binary','Mparser.py',141),
  ('operations -> operations * operations','operations',3,'p_operations_binary','Mparser.py',142),
  ('operations -> operations / operations','operations',3,'p_operations_binary','Mparser.py',143),
  ('operations -> operations > operations','operations',3,'p_operations_binary','Mparser.py',144),
  ('operations -> operations < operations','operations',3,'p_operations_binary','Mparser.py',145),
  ('operations -> operations GREATER_OR_EQUAL operations','operations',3,'p_operations_binary','Mparser.py',146),
  ('operations -> operations LESS_OR_EQUAL operations','operations',3,'p_operations_binary','Mparser.py',147),
  ('operations -> operations NOT_EQUAL operations','operations',3,'p_operations_binary','Mparser.py',148),
  ('operations -> operations EQUAL operations','operations',3,'p_operations_binary','Mparser.py',149),
  ('operations -> operations PLUS_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',150),
  ('operations -> operations MINUS_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',151),
  ('operations -> operations MULTIPLY_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',152),
  ('operations -> operations DIVIDE_MATRIX operations','operations',3,'p_operations_binary','Mparser.py',153),
  ('operations -> ( operations )','operations',3,'p_operations_binary','Mparser.py',154),
  ("operations -> ( operations ) '",'operations',4,'p_operations_binary','Mparser.py',155),
  ('operations -> array','operations',1,'p_operations_binary','Mparser.py',156),
  ('operations -> value','operations',1,'p_operations_binary','Mparser.py',157),
  ('operations -> - operations','operations',2,'p_operation_uminus','Mparser.py',171),
  ('value -> identifier','value',1,'p_value','Mparser.py',177),
  ('value -> FLOAT','value',1,'p_value','Mparser.py',178),
  ('value -> INT','value',1,'p_value','Mparser.py',179),
  ('value -> STRING','value',1,'p_value','Mparser.py',180),
  ('value -> ZEROS ( INT )','value',4,'p_value','Mparser.py',181),
  ('value -> ONES ( INT )','value',4,'p_value','Mparser.py',182),
  ('value -> EYE ( INT )','value',4,'p_value','Mparser.py',183),
  ('identifier -> ID','identifier',1,'p_identifier','Mparser.py',202),
  ('identifier -> identifier array','identifier',2,'p_identifier','Mparser.py',203),
  ("identifier -> identifier '",'identifier',2,'p_identifier','Mparser.py',204),
  ('array -> [ operations_list ]','array',3,'p_array','Mparser.py',215),
  ('operations_list -> operations_list , operations','operations_list',3,'p_operations_list','Mparser.py',231),
  ('operations_list -> operations','operations_list',1,'p_operations_list','Mparser.py',232),
]
