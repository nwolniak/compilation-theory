
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEright=ADDITION_ASSIGNSUBTRACTION_ASSIGNMULTIPLICATION_ASSIGNDIVISION_ASSIGNnonassocNOT_EQUALEQUALnonassocLESS_OR_EQUALGREATER_OR_EQUAL><left+-PLUS_MATRIXMINUS_MATRIXleft*/MULTIPLY_MATRIXDIVIDE_MATRIXrightUMINUSADDITION_ASSIGN BREAK CONTINUE DIVIDE_MATRIX DIVISION_ASSIGN ELSE EQUAL EYE FLOAT FOR GREATER_OR_EQUAL ID IF INT LESS_OR_EQUAL MINUS_MATRIX MULTIPLICATION_ASSIGN MULTIPLY_MATRIX NOT_EQUAL ONES PLUS_MATRIX PRINT RETURN STRING SUBTRACTION_ASSIGN WHILE ZEROSprogram : instructionsinstructions : instructions instruction\n                    | instruction : \'{\' instructions \'}\' instruction : BREAK \';\'\n                   | CONTINUE \';\' instruction : assignment \';\'\n                   | instruction_if\n                   | instruction_loop\n                   | instruction_print \';\'\n                   | instruction_return \';\' assignment : identifier \'=\' operations\n                    | identifier ADDITION_ASSIGN operations\n                    | identifier MULTIPLICATION_ASSIGN operations\n                    | identifier SUBTRACTION_ASSIGN operations\n                    | identifier DIVISION_ASSIGN operationsinstruction_if : IF \'(\' condition \')\' instruction %prec IFX\n                      | IF \'(\' condition \')\' instruction ELSE instruction instruction_loop : FOR ID \'=\' operations \':\' operations instruction\n                        | WHILE \'(\' condition \')\' instruction instruction_print : PRINT operations_list instruction_return : RETURN operations\n                            | RETURN condition : operationsoperations : \'(\' operations \')\' operations : operations \'+\' operations\n                  | operations \'-\' operations\n                  | operations \'*\' operations\n                  | operations \'/\' operations\n                  | operations \'>\' operations\n                  | operations \'<\' operations\n                  | operations GREATER_OR_EQUAL operations\n                  | operations LESS_OR_EQUAL operations\n                  | operations NOT_EQUAL operations\n                  | operations EQUAL operations\n                  | operations PLUS_MATRIX operations\n                  | operations MINUS_MATRIX operations\n                  | operations MULTIPLY_MATRIX operations\n                  | operations DIVIDE_MATRIX operationsoperations : operations "\'" operations : array\n                  | valueoperations : \'-\' operations %prec UMINUSvalue : FLOAT\n             | INT\n             | STRING value : ZEROS \'(\' operations_list \')\'\n             | ONES \'(\' operations_list \')\'\n             | EYE \'(\' operations_list \')\' value : identifier identifier : ID\n                  | ID \'[\' operations_list \']\' array : \'[\' operations_list \']\' operations_list : operations_list \',\' operations\n                        | operations'
    
_lr_action_items = {'{':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,4,-2,-3,-8,-9,-51,4,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,4,-52,4,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,4,4,-18,-19,]),'BREAK':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,5,-2,-3,-8,-9,-51,5,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,5,-52,5,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,5,5,-18,-19,]),'CONTINUE':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,6,-2,-3,-8,-9,-51,6,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,6,-52,6,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,6,6,-18,-19,]),'IF':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,13,-2,-3,-8,-9,-51,13,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,13,-52,13,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,13,13,-18,-19,]),'FOR':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,14,-2,-3,-8,-9,-51,14,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,14,-52,14,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,14,14,-18,-19,]),'WHILE':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,16,-2,-3,-8,-9,-51,16,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,16,-52,16,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,16,16,-18,-19,]),'PRINT':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,17,-2,-3,-8,-9,-51,17,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,17,-52,17,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,17,17,-18,-19,]),'RETURN':([0,2,3,4,8,9,15,19,20,21,22,23,24,38,39,41,42,43,47,49,75,77,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,114,115,],[-3,18,-2,-3,-8,-9,-51,18,-5,-6,-7,-10,-11,-41,-42,-44,-45,-46,-50,-4,-40,-43,18,-52,18,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,-20,-47,-48,-49,18,18,-18,-19,]),'ID':([0,2,3,4,8,9,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,43,47,49,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,],[-3,15,-2,-3,-8,-9,31,-51,15,15,15,-5,-6,-7,-10,-11,15,15,15,15,15,15,15,15,15,15,-41,-42,15,-44,-45,-46,-50,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-40,-43,15,15,15,15,-52,15,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-17,15,-20,-47,-48,-49,15,15,-18,-19,]),'$end':([0,1,2,3,8,9,20,21,22,23,24,49,106,108,114,115,],[-3,0,-1,-2,-8,-9,-5,-6,-7,-10,-11,-4,-17,-20,-18,-19,]),'}':([3,4,8,9,19,20,21,22,23,24,49,106,108,114,115,],[-2,-3,-8,-9,49,-5,-6,-7,-10,-11,-4,-17,-20,-18,-19,]),';':([5,6,7,10,11,15,18,34,35,38,39,41,42,43,47,48,50,51,52,53,54,75,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,],[20,21,22,23,24,-51,-23,-21,-55,-41,-42,-44,-45,-46,-50,-22,-12,-13,-14,-15,-16,-40,-43,-52,-54,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-47,-48,-49,]),'ELSE':([8,9,20,21,22,23,24,49,106,108,114,115,],[-8,-9,-5,-6,-7,-10,-11,-4,112,-20,-18,-19,]),'=':([12,15,31,84,],[25,-51,57,-52,]),'ADDITION_ASSIGN':([12,15,84,],[26,-51,-52,]),'MULTIPLICATION_ASSIGN':([12,15,84,],[27,-51,-52,]),'SUBTRACTION_ASSIGN':([12,15,84,],[28,-51,-52,]),'DIVISION_ASSIGN':([12,15,84,],[29,-51,-52,]),'(':([13,16,17,18,25,26,27,28,29,30,32,33,36,37,40,44,45,46,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[30,33,36,36,36,36,36,36,36,36,36,36,36,36,36,79,80,81,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'+':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,61,-41,-42,-44,-45,-46,-50,61,61,61,61,61,61,61,-40,61,-43,61,-52,61,-26,-27,-28,-29,61,61,61,61,61,61,-36,-37,-38,-39,-25,-53,-47,-48,-49,61,]),'-':([15,17,18,25,26,27,28,29,30,32,33,35,36,37,38,39,40,41,42,43,47,48,50,51,52,53,54,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,109,110,111,113,],[-51,37,37,37,37,37,37,37,37,37,37,62,37,37,-41,-42,37,-44,-45,-46,-50,62,62,62,62,62,62,62,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-40,62,-43,37,37,37,62,-52,62,-26,-27,-28,-29,62,62,62,62,62,62,-36,-37,-38,-39,-25,-53,37,-47,-48,-49,62,]),'*':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,63,-41,-42,-44,-45,-46,-50,63,63,63,63,63,63,63,-40,63,-43,63,-52,63,63,63,-28,-29,63,63,63,63,63,63,63,63,-38,-39,-25,-53,-47,-48,-49,63,]),'/':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,64,-41,-42,-44,-45,-46,-50,64,64,64,64,64,64,64,-40,64,-43,64,-52,64,64,64,-28,-29,64,64,64,64,64,64,64,64,-38,-39,-25,-53,-47,-48,-49,64,]),'>':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,65,-41,-42,-44,-45,-46,-50,65,65,65,65,65,65,65,-40,65,-43,65,-52,65,-26,-27,-28,-29,None,None,None,None,65,65,-36,-37,-38,-39,-25,-53,-47,-48,-49,65,]),'<':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,66,-41,-42,-44,-45,-46,-50,66,66,66,66,66,66,66,-40,66,-43,66,-52,66,-26,-27,-28,-29,None,None,None,None,66,66,-36,-37,-38,-39,-25,-53,-47,-48,-49,66,]),'GREATER_OR_EQUAL':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,67,-41,-42,-44,-45,-46,-50,67,67,67,67,67,67,67,-40,67,-43,67,-52,67,-26,-27,-28,-29,None,None,None,None,67,67,-36,-37,-38,-39,-25,-53,-47,-48,-49,67,]),'LESS_OR_EQUAL':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,68,-41,-42,-44,-45,-46,-50,68,68,68,68,68,68,68,-40,68,-43,68,-52,68,-26,-27,-28,-29,None,None,None,None,68,68,-36,-37,-38,-39,-25,-53,-47,-48,-49,68,]),'NOT_EQUAL':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,69,-41,-42,-44,-45,-46,-50,69,69,69,69,69,69,69,-40,69,-43,69,-52,69,-26,-27,-28,-29,-30,-31,-32,-33,None,None,-36,-37,-38,-39,-25,-53,-47,-48,-49,69,]),'EQUAL':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,70,-41,-42,-44,-45,-46,-50,70,70,70,70,70,70,70,-40,70,-43,70,-52,70,-26,-27,-28,-29,-30,-31,-32,-33,None,None,-36,-37,-38,-39,-25,-53,-47,-48,-49,70,]),'PLUS_MATRIX':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,71,-41,-42,-44,-45,-46,-50,71,71,71,71,71,71,71,-40,71,-43,71,-52,71,-26,-27,-28,-29,71,71,71,71,71,71,-36,-37,-38,-39,-25,-53,-47,-48,-49,71,]),'MINUS_MATRIX':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,72,-41,-42,-44,-45,-46,-50,72,72,72,72,72,72,72,-40,72,-43,72,-52,72,-26,-27,-28,-29,72,72,72,72,72,72,-36,-37,-38,-39,-25,-53,-47,-48,-49,72,]),'MULTIPLY_MATRIX':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,73,-41,-42,-44,-45,-46,-50,73,73,73,73,73,73,73,-40,73,-43,73,-52,73,73,73,-28,-29,73,73,73,73,73,73,73,73,-38,-39,-25,-53,-47,-48,-49,73,]),'DIVIDE_MATRIX':([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,74,-41,-42,-44,-45,-46,-50,74,74,74,74,74,74,74,-40,74,-43,74,-52,74,74,74,-28,-29,74,74,74,74,74,74,74,74,-38,-39,-25,-53,-47,-48,-49,74,]),"'":([15,35,38,39,41,42,43,47,48,50,51,52,53,54,56,75,76,77,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,113,],[-51,75,-41,-42,-44,-45,-46,-50,75,75,75,75,75,75,75,-40,75,-43,75,-52,75,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-47,-48,-49,75,]),',':([15,34,35,38,39,41,42,43,47,58,75,77,78,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,],[-51,60,-55,-41,-42,-44,-45,-46,-50,60,-40,-43,60,-52,-54,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,60,60,60,-47,-48,-49,]),')':([15,35,38,39,41,42,43,47,55,56,59,75,76,77,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,],[-51,-55,-41,-42,-44,-45,-46,-50,82,-24,85,-40,101,-43,-52,-54,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,109,110,111,-47,-48,-49,]),']':([15,35,38,39,41,42,43,47,58,75,77,78,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,],[-51,-55,-41,-42,-44,-45,-46,-50,84,-40,-43,102,-52,-54,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-47,-48,-49,]),':':([15,38,39,41,42,43,47,75,77,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,109,110,111,],[-51,-41,-42,-44,-45,-46,-50,-40,-43,107,-52,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-25,-53,-47,-48,-49,]),'[':([15,17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FLOAT':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'INT':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'STRING':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ZEROS':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ONES':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'EYE':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,4,],[2,19,]),'instruction':([2,19,82,85,112,113,],[3,3,106,108,114,115,]),'assignment':([2,19,82,85,112,113,],[7,7,7,7,7,7,]),'instruction_if':([2,19,82,85,112,113,],[8,8,8,8,8,8,]),'instruction_loop':([2,19,82,85,112,113,],[9,9,9,9,9,9,]),'instruction_print':([2,19,82,85,112,113,],[10,10,10,10,10,10,]),'instruction_return':([2,19,82,85,112,113,],[11,11,11,11,11,11,]),'identifier':([2,17,18,19,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,82,85,107,112,113,],[12,47,47,12,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,12,12,47,12,12,]),'operations_list':([17,32,40,79,80,81,],[34,58,78,103,104,105,]),'operations':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[35,48,50,51,52,53,54,56,35,56,76,77,35,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,35,35,35,113,]),'array':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'value':([17,18,25,26,27,28,29,30,32,33,36,37,40,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,107,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'condition':([30,33,],[55,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',36),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',45),
  ('instructions -> <empty>','instructions',0,'p_instructions','Mparser.py',46),
  ('instruction -> { instructions }','instruction',3,'p_instruction','Mparser.py',56),
  ('instruction -> BREAK ;','instruction',2,'p_instruction_2','Mparser.py',62),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction_2','Mparser.py',63),
  ('instruction -> assignment ;','instruction',2,'p_instruction_3','Mparser.py',72),
  ('instruction -> instruction_if','instruction',1,'p_instruction_3','Mparser.py',73),
  ('instruction -> instruction_loop','instruction',1,'p_instruction_3','Mparser.py',74),
  ('instruction -> instruction_print ;','instruction',2,'p_instruction_3','Mparser.py',75),
  ('instruction -> instruction_return ;','instruction',2,'p_instruction_3','Mparser.py',76),
  ('assignment -> identifier = operations','assignment',3,'p_assignments','Mparser.py',83),
  ('assignment -> identifier ADDITION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',84),
  ('assignment -> identifier MULTIPLICATION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',85),
  ('assignment -> identifier SUBTRACTION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',86),
  ('assignment -> identifier DIVISION_ASSIGN operations','assignment',3,'p_assignments','Mparser.py',87),
  ('instruction_if -> IF ( condition ) instruction','instruction_if',5,'p_instruction_if','Mparser.py',94),
  ('instruction_if -> IF ( condition ) instruction ELSE instruction','instruction_if',7,'p_instruction_if','Mparser.py',95),
  ('instruction_loop -> FOR ID = operations : operations instruction','instruction_loop',7,'p_instruction_loop','Mparser.py',105),
  ('instruction_loop -> WHILE ( condition ) instruction','instruction_loop',5,'p_instruction_loop','Mparser.py',106),
  ('instruction_print -> PRINT operations_list','instruction_print',2,'p_instruction_print','Mparser.py',117),
  ('instruction_return -> RETURN operations','instruction_return',2,'p_instruction_return','Mparser.py',124),
  ('instruction_return -> RETURN','instruction_return',1,'p_instruction_return','Mparser.py',125),
  ('condition -> operations','condition',1,'p_condition','Mparser.py',135),
  ('operations -> ( operations )','operations',3,'p_operations','Mparser.py',141),
  ('operations -> operations + operations','operations',3,'p_operations_2','Mparser.py',147),
  ('operations -> operations - operations','operations',3,'p_operations_2','Mparser.py',148),
  ('operations -> operations * operations','operations',3,'p_operations_2','Mparser.py',149),
  ('operations -> operations / operations','operations',3,'p_operations_2','Mparser.py',150),
  ('operations -> operations > operations','operations',3,'p_operations_2','Mparser.py',151),
  ('operations -> operations < operations','operations',3,'p_operations_2','Mparser.py',152),
  ('operations -> operations GREATER_OR_EQUAL operations','operations',3,'p_operations_2','Mparser.py',153),
  ('operations -> operations LESS_OR_EQUAL operations','operations',3,'p_operations_2','Mparser.py',154),
  ('operations -> operations NOT_EQUAL operations','operations',3,'p_operations_2','Mparser.py',155),
  ('operations -> operations EQUAL operations','operations',3,'p_operations_2','Mparser.py',156),
  ('operations -> operations PLUS_MATRIX operations','operations',3,'p_operations_2','Mparser.py',157),
  ('operations -> operations MINUS_MATRIX operations','operations',3,'p_operations_2','Mparser.py',158),
  ('operations -> operations MULTIPLY_MATRIX operations','operations',3,'p_operations_2','Mparser.py',159),
  ('operations -> operations DIVIDE_MATRIX operations','operations',3,'p_operations_2','Mparser.py',160),
  ("operations -> operations '",'operations',2,'p_operations_3','Mparser.py',166),
  ('operations -> array','operations',1,'p_operations_4','Mparser.py',172),
  ('operations -> value','operations',1,'p_operations_4','Mparser.py',173),
  ('operations -> - operations','operations',2,'p_operation_uminus','Mparser.py',180),
  ('value -> FLOAT','value',1,'p_value','Mparser.py',187),
  ('value -> INT','value',1,'p_value','Mparser.py',188),
  ('value -> STRING','value',1,'p_value','Mparser.py',189),
  ('value -> ZEROS ( operations_list )','value',4,'p_value_2','Mparser.py',200),
  ('value -> ONES ( operations_list )','value',4,'p_value_2','Mparser.py',201),
  ('value -> EYE ( operations_list )','value',4,'p_value_2','Mparser.py',202),
  ('value -> identifier','value',1,'p_value_3','Mparser.py',213),
  ('identifier -> ID','identifier',1,'p_identifier','Mparser.py',219),
  ('identifier -> ID [ operations_list ]','identifier',4,'p_identifier','Mparser.py',220),
  ('array -> [ operations_list ]','array',3,'p_array','Mparser.py',230),
  ('operations_list -> operations_list , operations','operations_list',3,'p_operations_list','Mparser.py',237),
  ('operations_list -> operations','operations_list',1,'p_operations_list','Mparser.py',238),
]
